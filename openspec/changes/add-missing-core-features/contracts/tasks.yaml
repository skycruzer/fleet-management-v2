openapi: 3.0.3
info:
  title: Task Management API
  description: Task CRUD operations and Kanban board management
  version: 1.0.0

servers:
  - url: https://fleet-management-v2.vercel.app/api
    description: Production
  - url: http://localhost:3000/api
    description: Local Development

tags:
  - name: Tasks
    description: Task management operations

paths:
  /tasks:
    get:
      tags:
        - Tasks
      summary: Get all tasks
      description: Retrieve tasks with filtering and pagination
      operationId: getTasks
      security:
        - BearerAuth: []
      parameters:
        - name: status
          in: query
          description: Filter by status
          schema:
            type: string
            enum: [TODO, IN_PROGRESS, DONE, CANCELLED]
        - name: assigned_to
          in: query
          description: Filter by assignee (user ID or 'me')
          schema:
            type: string
        - name: priority
          in: query
          schema:
            type: string
            enum: [LOW, MEDIUM, HIGH, URGENT]
        - name: tags
          in: query
          description: Filter by tags (comma-separated)
          schema:
            type: string
            example: certification,urgent
        - name: overdue
          in: query
          description: Show only overdue tasks
          schema:
            type: boolean
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Tasks retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskListResponse'
              examples:
                success:
                  value:
                    success: true
                    data:
                      - id: 550e8400-e29b-41d4-a716-446655440000
                        title: Review Q4 certification expiry reports
                        description: Analyze expiring certifications for Q4 and send notifications
                        status: IN_PROGRESS
                        priority: HIGH
                        assigned_to: 660e8400-e29b-41d4-a716-446655440001
                        assigned_to_name: Jane Manager
                        created_by: 770e8400-e29b-41d4-a716-446655440002
                        created_by_name: Admin User
                        due_date: '2025-10-31'
                        tags: [certification, reporting]
                        created_at: '2025-10-15T09:00:00Z'
                        updated_at: '2025-10-22T14:30:00Z'
                    pagination:
                      page: 1
                      pageSize: 20
                      totalCount: 45
                      totalPages: 3
                      hasNext: true
                      hasPrevious: false

    post:
      tags:
        - Tasks
      summary: Create new task
      description: Create a new task (admin/manager only)
      operationId: createTask
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskInput'
            examples:
              urgent:
                summary: Urgent certification review
                value:
                  title: Emergency certification verification
                  description: >-
                    Verify all Captain certifications due to audit request.
                    Check for any expired or soon-to-expire documents.
                  priority: URGENT
                  assigned_to: 660e8400-e29b-41d4-a716-446655440001
                  due_date: '2025-10-25'
                  tags: [certification, audit, urgent]
              routine:
                summary: Routine task
                value:
                  title: Update pilot roster for RP13/2025
                  description: Review and finalize pilot assignments for roster period 13
                  priority: MEDIUM
                  due_date: '2025-11-01'
                  tags: [roster, scheduling]
      responses:
        '201':
          description: Task created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /tasks/{id}:
    get:
      tags:
        - Tasks
      summary: Get task details
      operationId: getTask
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Task details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    patch:
      tags:
        - Tasks
      summary: Update task
      description: Update task fields (status, assignee, priority, etc.)
      operationId: updateTask
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskUpdateInput'
            examples:
              statusUpdate:
                summary: Mark as complete
                value:
                  status: DONE
              reassign:
                summary: Reassign task
                value:
                  assigned_to: 770e8400-e29b-41d4-a716-446655440003
                  priority: HIGH
              kanbanMove:
                summary: Move in Kanban (drag-drop)
                value:
                  status: IN_PROGRESS
      responses:
        '200':
          description: Task updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
        '400':
          description: Invalid update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Task not found

    delete:
      tags:
        - Tasks
      summary: Delete task
      description: Soft delete task by setting status to CANCELLED
      operationId: deleteTask
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Task deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Task deleted successfully
        '404':
          description: Task not found

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    TaskInput:
      type: object
      required:
        - title
        - priority
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          maxLength: 5000
          nullable: true
        priority:
          type: string
          enum: [LOW, MEDIUM, HIGH, URGENT]
          default: MEDIUM
        assigned_to:
          type: string
          format: uuid
          nullable: true
          description: User ID of assignee (null for unassigned)
        due_date:
          type: string
          format: date
          nullable: true
        tags:
          type: array
          items:
            type: string
          maxItems: 10
          example: [certification, urgent]

    TaskUpdateInput:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          maxLength: 5000
          nullable: true
        status:
          type: string
          enum: [TODO, IN_PROGRESS, DONE, CANCELLED]
        priority:
          type: string
          enum: [LOW, MEDIUM, HIGH, URGENT]
        assigned_to:
          type: string
          format: uuid
          nullable: true
        due_date:
          type: string
          format: date
          nullable: true
        tags:
          type: array
          items:
            type: string
          maxItems: 10

    Task:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
          nullable: true
        status:
          type: string
          enum: [TODO, IN_PROGRESS, DONE, CANCELLED]
        priority:
          type: string
          enum: [LOW, MEDIUM, HIGH, URGENT]
        assigned_to:
          type: string
          format: uuid
          nullable: true
        assigned_to_name:
          type: string
          nullable: true
        created_by:
          type: string
          format: uuid
        created_by_name:
          type: string
        due_date:
          type: string
          format: date
          nullable: true
        tags:
          type: array
          items:
            type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        completed_at:
          type: string
          format: date-time
          nullable: true

    TaskResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          $ref: '#/components/schemas/Task'
        metadata:
          type: object
          properties:
            timestamp:
              type: string
              format: date-time

    TaskListResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: array
          items:
            $ref: '#/components/schemas/Task'
        pagination:
          type: object
          properties:
            page:
              type: integer
            pageSize:
              type: integer
            totalCount:
              type: integer
            totalPages:
              type: integer
            hasNext:
              type: boolean
            hasPrevious:
              type: boolean

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
            details:
              type: object
              nullable: true
